==============================
Hubwire Admin 3.0 Setup Guide
==============================

1. Clone the repo: git clone git@bitbucket.org:hubwire/ha-l5.1.git [SSH].
2. Install vendor files: composer install
3. Run migration script: php artisan migrate
4. Copy .env.example and change the database connection accordingly
5. Setup the domain name settings for your local machine: 
	a. Open the file ~/.Homestead/Homestead.yaml
	b. Set the following under 'folders':
		- map: ~/Sites/hubwire-admin
      	  to: /home/vagrant/Sites/hubwire-admin
    	- map: ~/Sites/hapi
      	  to : /home/vagrant/Sites/hapi
    c. Set the following under 'sites':
		- map: local-biz.hubwire.com
      	  to: /home/vagrant/Sites/hubwire-admin/public
    	- map: local-api.hubwire.com
          to: /home/vagrant/Sites/hapi/public
    d. Set your host file to point 'local-biz.hubwire.com' and 'local-api.hubwire.com' to your homestead/vagrant IP (default: 192.168.10.10)
    e. vagrant provision / vagrant reload --provision
6. Set your domain and IP in /etc/hosts
7. You're all done! Happy coding! =D


Useful tips:
-------------
1. For documentation on logging activity in the Activity Log, refer to: https://github.com/spatie/activitylog
2. For documentation on user roles and permissions, refer to: https://github.com/romanbican/roles 
3. To create a new Guzzle Client request, include the GuzzleCLient Trait and use accordingly.

Do(s) and Don't(s)
------------------
1. Always use the repository to Create/Read/Update/Delete.
2. When creating a new repository, add the binding to app>Providers>RepositoriesServiceProvider.php as follows in the register function:
	"$this->app->bind(
            'App\Repositories\Contracts\<InsertClassName>Repository',
            'App\Repositories\Eloquent\<InsertClassName>Repository'
        );"

=================
For server setup
=================
additional steps:
php artisan cache:clear 
chmod -R 777 storage 
composer dump-autoload

++++--------------------------------------------------------------------------++++

OPTIONAL:

1. Email testing in local environment
=========================
mailcatcher setup in HAPI
=========================

vagrant up
vagrant ssh
sudo apt-get install ruby1.9.1-dev libsqlite3-dev
sudo gem install mailcatcher
mailcatcher --ip 192.168.10.10

in config/mail.php, change
'from' => ['address' => null, 'name' => null],
to
'from' => ['address' => env('MAIL_FROM_ADDRESS', null), 'name' => env('MAIL_FROM_NAME', null)],

in .env file, set:
MAIL_DRIVER=smtp
MAIL_HOST=192.168.10.10
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=false
MAIL_FROM_ADDRESS='tech@hubwire.com'
MAIL_FROM_NAME='Test Email Sender'

in you homestead.yaml, setup port forwarding for port 1080.
ports:
     - send: 1080
       to: 1080


To have mailcatcher run as a service in vagrant,
create a new conf file: sudo nano /etc/init/mailcatcher.conf
file contents:
  description "Mailcatcher"

  start on runlevel [2345]
  stop on runlevel [!2345]

  respawn

  exec /usr/bin/env $(which mailcatcher) --foreground --http-ip=0.0.0.0

on vagrant restart, use "sudo service mailcatcher start" to start the service. Or if you are feeling adventurous, just add it as a service that autoruns on vagrant up. 

=====
Usage
=====
In your browser, browse to http://192.168.10.10:1080 to view all mails 


Reference: https://mailcatcher.me/
NOTE: If you have set that your homestead IP to be anything other than the default 192.168.10.10, set the IP accordingly.

++++--------------------------------------------------------------------------++++